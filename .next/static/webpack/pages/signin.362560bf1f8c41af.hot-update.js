"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/signin",{

/***/ "./components/Api/Api.ts":
/*!*******************************!*\
  !*** ./components/Api/Api.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOGIN_TOKEN: function() { return /* binding */ LOGIN_TOKEN; },\n/* harmony export */   SIGN_UP_TOKKEN: function() { return /* binding */ SIGN_UP_TOKKEN; },\n/* harmony export */   getFolderData: function() { return /* binding */ getFolderData; },\n/* harmony export */   getFoldersData: function() { return /* binding */ getFoldersData; },\n/* harmony export */   getLinksData: function() { return /* binding */ getLinksData; },\n/* harmony export */   getUserData: function() { return /* binding */ getUserData; },\n/* harmony export */   getUsersData: function() { return /* binding */ getUsersData; },\n/* harmony export */   signUpApi: function() { return /* binding */ signUpApi; },\n/* harmony export */   tryEmailCheck: function() { return /* binding */ tryEmailCheck; },\n/* harmony export */   tryUserCheck: function() { return /* binding */ tryUserCheck; }\n/* harmony export */ });\nconst BASE_URL = `https://bootcamp-api.codeit.kr/api`;\nconst BASE_ERROR_MESSAGE = \"불러오기 에러이빈다. 일부러 오타낸거이빈다. 감샇바니다.\";\nconst SIGN_UP_TOKKEN = \"signUpToken\";\nconst LOGIN_TOKEN = \"loginToken\";\nasync function getUserData() {\n  const response = await fetch(`${BASE_URL}/sample/user`, {\n    method: \"GET\",\n    headers: {\n      accept: `*/*`\n    }\n  });\n  if (!response.ok) throw new Error(`유저데이터 ${BASE_ERROR_MESSAGE}`);\n  const {\n    name,\n    id,\n    email,\n    profileImageSource\n  } = await response.json();\n  return {\n    name,\n    id,\n    email,\n    profileImageSource\n  };\n}\nasync function getFolderData() {\n  const response = await fetch(`${BASE_URL}/sample/folder`, {\n    method: \"GET\",\n    headers: {\n      accept: `*/*`\n    }\n  });\n  if (!response.ok) throw new Error(`폴더데이터 ${BASE_ERROR_MESSAGE}`);\n  return response.json();\n}\nasync function getUsersData(userId) {\n  const response = await fetch(`${BASE_URL}/users/${userId}`, {\n    method: \"GET\",\n    headers: {\n      accept: `*/*`\n    }\n  });\n  if (!response.ok) throw new Error(`유저들데이터 ${BASE_ERROR_MESSAGE}`);\n  return response.json();\n}\nasync function getFoldersData() {\n  const response = await fetch(`${BASE_URL}/users/1/folders`, {\n    method: \"GET\",\n    headers: {\n      accept: `*/*`\n    }\n  });\n  if (!response.ok) throw new Error(`폴더들 ${BASE_ERROR_MESSAGE}`);\n  return response.json();\n}\nasync function getLinksData(folderId) {\n  const response = await fetch(`${BASE_URL}/users/1/links?folderId=${folderId}`, {\n    method: \"GET\",\n    headers: {\n      accept: `*/*`\n    }\n  });\n  if (!response.ok) throw new Error(`폴더데이터 ${BASE_ERROR_MESSAGE}`);\n  return response.json();\n}\nasync function signUpApi({\n  Id,\n  password\n}) {\n  try {\n    const response = await fetch(`${BASE_URL}/sign-up`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: Id,\n        password: password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"회원가입 에러입니다.\");\n    }\n    const result = await response.json();\n    const signUpToken = result.data.accessToken;\n    localStorage.setItem(SIGN_UP_TOKKEN, signUpToken);\n    location.href = \"./folder\";\n  } catch (err) {\n    alert(err);\n  }\n}\nasync function tryUserCheck({\n  Id,\n  password\n}) {\n  const response = await fetch(`${BASE_URL}/sign-in`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: Id,\n      password: password\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"로그인 에러입니다.\");\n  }\n  const {\n    data: {\n      accessToken\n    }\n  } = await response.json();\n  localStorage.setItem(LOGIN_TOKEN, accessToken);\n  location.href = \"./folder\";\n}\nasync function tryEmailCheck(Id) {\n  const response = await fetch(`${BASE_URL}/check-email`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: Id\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"오류가 발생했습니다. 아쉽게되었네요\");\n  }\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Api/Api.ts\n"));

/***/ })

});